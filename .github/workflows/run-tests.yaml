name: build & test
on:
  push:
    branches:
     - master
     - dev
jobs:

  install_ecl:
    name: Download ECL
    runs-on: ubuntu-latest
    steps:
      - run: |
          cd /tmp
          mkdir ecl-dir
          cd ecl-dir
          wget https://common-lisp.s3.eu-central-1.amazonaws.com/ecl-23.9.9.tgz
      - name: Upload ECL artifact
        uses: actions/upload-artifact@v4
        with:
          name: ecl-artifact
          path: /tmp/ecl-dir/ecl-23.9.9.tgz

  install_quicklisp:
    name: Install QuickLisp
    runs-on: ubuntu-latest
    steps:
     - run: |
          cd /tmp
          mkdir ql-dir
          cd ql-dir
          wget -q https://beta.quicklisp.org/quicklisp.lisp
          chmod -R a+rwx /tmp/ql-dir
     - name: Upload Quicklisp artifact
       uses: actions/upload-artifact@v4
       with:
          name: ql-artifact
          path: /tmp/ql-dir

  run_test_suites:
    name: Test on ${{ matrix.scenario }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scenario: [ecl_native, ecl_fallback, sbcl_native, sbcl_fallback, clisp_native, clisp_fallback]
    needs: [install_quicklisp]
    steps:
      - uses: actions/checkout@v4
      - run: |
          cd /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/
          cat force-native.lisp github-workflow-tests.lisp > github-workflow-tests-fallback.lisp
      - uses: actions/download-artifact@v4
        with:
          name: ql-artifact
          path: /tmp/ql-dir
      - if: (matrix.scenario == 'ecl_native') || (matrix.scenario == 'ecl_fallback')
        uses: actions/download-artifact@v4
        with:
          name: ecl-artifact
          path: /tmp/ecl-dir/
      - if: (matrix.scenario == 'ecl_native') || (matrix.scenario == 'ecl_fallback')
        run: |
          cd /tmp/ecl-dir/
          tar -xzf ecl-23.9.9.tgz
          cd ecl-23.9.9
          ./configure
          make -j 8
          sudo make install
      - if: matrix.scenario == 'ecl_native'
        run: |
          ecl --shell /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests.lisp
      - if: matrix.scenario == 'ecl_fallback'
        run: |
          ecl --shell /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests-fallback.lisp

      - if: (matrix.scenario == 'sbcl_native') || (matrix.scenario == 'sbcl_fallback')
        run: |
         sudo apt-get install sbcl
      - if: matrix.scenario == 'sbcl_native'
        run: |
          sbcl --script /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests.lisp
      - if: matrix.scenario == 'sbcl_fallback'
        run: |
          sbcl --script /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests-fallback.lisp

      - if: (matrix.scenario == 'clisp_native') || (matrix.scenario == 'clisp_fallback')
        run: |
         sudo apt-get install clisp
      - if: matrix.scenario == 'clisp_native'
        run: |
          clisp /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests.lisp
      - if: matrix.scenario == 'clisp_fallback'
        run: |
          clisp /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests-fallback.lisp

      - if: (matrix.scenario == 'cmucl_native') || (matrix.scenario == 'cmucl_fallback')
        run: |
         sudo apt-get install cmucl
      - if: matrix.scenario == 'cmucl_native'
        run: |
          cmucl -load /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests.lisp
      - if: matrix.scenario == 'cmucl_fallback'
        run: |
          cmucl -load /home/runner/work/cl-custom-hash-table/cl-custom-hash-table/.github/workflows/github-workflow-tests-fallback.lisp
