language: common-lisp
sudo: required

env:
  matrix:
    - LISP=abcl FALLBACK=true
    
    - LISP=allegro NATIVE=true
    - LISP=allegro FALLBACK=true

    # Error outside our control:
    # The command "curl https://raw.githubusercontent.com/luismbo/cl-travis/master/install.sh | bash" failed and exited with 1 during .
    # - LISP=allegromodern

    # Error outside our control: CCL 1.10 and cl-coveralls don't work together (see also cl-coveralls README):
    # [package cl-coveralls] Not supported implementation: Clozure Common Lisp Version 1.10-r16196  (LinuxX8664)
    # Therefore use CCL without coverage
    - LISP=ccl NATIVE=true
    - LISP=ccl FALLBACK=true
    
    - LISP=clisp FALLBACK=true

    # Error outside our control:
    # /home/travis/.cim/bin/cl: 9: .: Can't open /home/travis/.cim/config/current.7469
    #- LISP=cmucl NATIVE=true
    #- LISP=cmucl FALLBACK=true

    - LISP=ecl FALLBACK=true
    - LISP=sbcl NATIVE=true COVERALLS=true
    - LISP=sbcl FALLBACK=true COVERALLS=true
    
install:
  # Install cl-travis
  - curl https://raw.githubusercontent.com/metawilm/cl-travis/dev/install.sh | bash
  # Newest Dexador needed for cl-coveralls -- https://github.com/fukamachi/cl-coveralls/issues/10
  - git clone https://github.com/fukamachi/dexador.git ~/lisp/dexador
  # Our project
  - git clone https://github.com/metawilm/cl-custom-hash-table.git ~/lisp/cl-custom-hash-table

script:
  - cl -e '(in-package :cl-user)'
       -e '(cond ((asdf/os:getenv "FALLBACK") (push :custom-hash-table-fallback *features*))
                 ((asdf/os:getenv "NATIVE") (push :custom-hash-table-native *features*)))'
       -e '(progn (ql:quickload :cl-custom-hash-table) (ql:quickload :cl-custom-hash-table-test))'
       -e '(defun do-test ()
             (asdf:oos (read-from-string "asdf::load-op") :cl-custom-hash-table :force t)
             (asdf:oos (read-from-string "asdf::load-op") :cl-custom-hash-table-test :force t)
             (eval (read-from-string "(cl-custom-hash-table-test:run)")))'
       -e '(cond ((asdf/os:getenv "COVERALLS")
                  (ql:quickload :cl-coveralls)
                  (eval (read-from-string "(coveralls:with-coveralls ()  (do-test))")))
                 (t
                  (do-test)))'

notifications:
  email:
    - metawilm@gmail.com